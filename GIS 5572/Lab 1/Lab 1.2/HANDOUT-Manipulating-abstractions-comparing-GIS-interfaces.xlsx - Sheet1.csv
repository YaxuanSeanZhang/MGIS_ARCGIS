,Instruction Sets,,,
How toâ€¦,ArcPro GUI,ArcPy,Fiona/Shapely,PostGIS
Create a feature class,Catalog > right click database > New > Feature Class > INSERT DETAILS,"arcpy.management.CreateFeatureclass('/GIS_ARC2/LAB1', 'example')","Example = fiona.open('/GIS_ARC2/LAB1/example.shp', mode='w', driver='ESRI Shapefile', schema={'geometry':'Point', 'properties':[('Name', 'str')]}, crs=""EPSG:4326"")","CREATE TABLE example (geom GEOMETRY(POINT, 4326));"
Add points to a feature class,"Be sure Feature Class was created as a a Feature Class ""Point"" Type > ... ","with arcpy.da.InsertCursor('/GIS_ARC2/LAB1/MyPoint', ['SHAPE@']) as curs: curs.insertRow(arcpy.Point(0, 0))","MyPoint.write({'geometry' : {'type' : 'Point','coordinates' :(0,0)}, 'properties' : {'Name':'Point 1'}})","INSERT INTO myPoint (name, geom) VALUES ('Point1', ST_GeomFromText('POINT(0,0)', 4326));"
Add line to a feature class,"Be sure Feature Class was created as a a Feature Class ""Line"" Type > ... ","with arcpy.da.InsertCursor('/GIS_ARC2/LAB1/MyLine', ['SHAPE@']) as curs: curs.insertRow(arcpy.Polyline(arcpy.Array([arcpy.Point(0,0), arcpy.Point(1,1)]), arcpy.SpatialReference(4326)))","MyLine.write({'geometry' : {'type' : 'LineString','coordinates' :[(0,0),(1,1)]}, 'properties' : {'Name':'Line 1'}})","INSERT INTO myLine (name, geom) VALUES ('Line1', ST_GeomFromText('LINESTRING(0 0 1 1)', 4326));"
Add polygons to a feature class,"Be sure Feature Class was created as a a Feature Class ""Polygon"" Type > ... ","with arcpy.da.InsertCursor('/GIS_ARC2/LAB1/MyPolygon', ['SHAPE@']) as curs: curs.insertRow(arcpy.Polygon(arcpy.Array([arcpy.Point(0,0), arcpy.Point(0,1), arcpy.Point(1,1)]),arcpy.SpatialReference(4326)))","MyPolygon.write({'geometry' : {'type' : 'Polygon','coordinates' :[(0,0),(0,1),(1,1)]}, 'properties' : {'Name':'Polygon 1'}})","INSERT INTO myPolygon (name, geom) VALUES ('Polygon1', ST_GeomFromText('POLYGON(0 0 0 1 1 1)', 4326));"
View each row in an attribute table for a feature class,In contents > right click layer > click attribute table,"with arcpy.da.SearchCursor('/GIS_ARC2/LAB1/MyPolygon', [*]) as curs: for row in curs: print(row)",gpd.read_file('/GIS_ARC2/LAB1/MyPolygon.shp'),SELECT * FROM myPolygon;
View each geometry object in a feature class,In map pane > pan and zoom,"arcpy.env.workspace = ""C:/arc2data"" fc = ""myFeatureClass"" for row in arcpy.da.SearchCursor(fc, [""SHAPE@""]): print(row[0].type)","with fiona.open(""myFeatureClass.shp"") as src: for feature in src:  geometry = shape(feature[""geometry""])  print(geometry.geom_type)","SELECT ST_AsText(geom) FROM myFeatureClass;
"
Summarize the contents of a feature class,"In attribute table, view headings","arcpy.env.workspace = ""C:\arc2data, fc = ""myFeatureClass"", arcpy.Statistics_analysis(fc, ""summary_table"", [[""field_name"", ""COUNT""],[""field_name"", ""SUM""], [""field_name"",""MEAN""]])","with fiona.open(""myFeatureClass.shp"") as src: prop_values = [feat[""properties""][""property_name""] for feat in src], count, total, mean, min_value, max_value = np.sum(prop_values), np.sum(prop_values), np.mean(prop_values), np.min(prop_values), np.max(prop_values)","SELECT COUNT(*), SUM(field_name), AVG(field_name), MIN(field_name), MAX(field_name) FROM myFeatureClass;"
Export to shapefile,In contents pane > right click layer > data > export features > choose folder location > name it <name>.shp,"arcpy.FeatureClassToFeatureClass_conversion(input_fc, arcpy.env.workspace, output_shapefile)
"," input_file = ""myFeatureClass.shp"" output_file = ""output.shp""  with fiona.open(input_file, ""r"") as input, fiona.open(output_file, ""w"", ""ESRI Shapefile"", input.schema) as output: [output.write(f) for f in input]","ogr2ogr -f ""ESRI Shapefile"" output.shp PG:""host=localhost user=myusername dbname=mydatabase password=mypassword"" -sql ""SELECT * FROM mytable"""
Export to geodatabase,"right-click on the feature class, select ""Export"", choose ""To Geodatabase"", select the output geodatabase, choose the feature class, and click ""Run"".","arcpy.FeatureClassToGeodatabase_conversion(input_fc, output_gdb)","input_file = ""myFeatureClass.shp""
output_file = ""output.gdb""

with fiona.open(input_file, ""r"") as input, fiona.open(output_file, ""w"", driver=""FileGDB"", layer=input.name, crs=input.crs, schema=input.schema) as output:
    [output.write(f) for f in input]","ogr2ogr -f ""FileGDB"" output.gdb PG:""host=localhost user=myusername dbname=mydatabase password=mypassword"" -sql ""SELECT * FROM mytable"""